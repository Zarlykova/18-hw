{"ast":null,"code":"import { act } from \"react-dom/test-utils\";\nimport { createStore } from \"redux\";\nexport const calculatorActionTypes = {\n  ADD: \"ADD\",\n  SUBTRACT: \"SUBTRACT\",\n  DIVIDE: \"DIVIDE\",\n  MULTIPLY: \"MULTIPLY\"\n};\nconst initialState = {\n  result: 0\n};\nconst calculatorReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case calculatorActionTypes.ADD:\n      return {\n        ...state,\n        result: state.result + action.payload\n      };\n    case calculatorActionTypes.SUBTRACT:\n      return {\n        ...state,\n        result: state.result - action.payload\n      };\n    case calculatorActionTypes.DIVIDE:\n      return {\n        ...state,\n        result: state.result / action.payload\n      };\n    case calculatorActionTypes.MULTIPLY:\n      return {\n        ...state,\n        result: state.result * action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const store = createStore(calculatorReducer);\nstore.subscribe(() => {});","map":{"version":3,"names":["act","createStore","calculatorActionTypes","ADD","SUBTRACT","DIVIDE","MULTIPLY","initialState","result","calculatorReducer","state","action","type","payload","store","subscribe"],"sources":["/Users/kaukhartilekovna/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import { act } from \"react-dom/test-utils\";\nimport { createStore } from \"redux\";\n\n\nexport const calculatorActionTypes = {\n    ADD:\"ADD\",\n    SUBTRACT :\"SUBTRACT\",\n    DIVIDE:\"DIVIDE\",\n    MULTIPLY:\"MULTIPLY\",\n}\n\nconst initialState = {\n    result:0,\n}\nconst calculatorReducer = (state = initialState ,action)=>{\n\n switch(action.type){\ncase calculatorActionTypes.ADD:\n    return{\n        ...state,\n        result:state.result + action.payload,\n    }\n\ncase calculatorActionTypes.SUBTRACT:\n    return{\n        ...state,\n        result:state.result - action.payload,\n    }\n\ncase calculatorActionTypes.DIVIDE:\n    return{\n        ...state,\n        result:state.result / action.payload,\n    }\n\ncase calculatorActionTypes.MULTIPLY:\n    return{\n        ...state,\n        result:state.result * action.payload,\n    }\n    default:\n        return state;\n \n    \n}\n}\n\n\nexport const store = createStore(calculatorReducer)\n\nstore.subscribe(()=>{\n    \n    \n})"],"mappings":"AAAA,SAASA,GAAG,QAAQ,sBAAsB;AAC1C,SAASC,WAAW,QAAQ,OAAO;AAGnC,OAAO,MAAMC,qBAAqB,GAAG;EACjCC,GAAG,EAAC,KAAK;EACTC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAC,QAAQ;EACfC,QAAQ,EAAC;AACb,CAAC;AAED,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAC;AACX,CAAC;AACD,MAAMC,iBAAiB,GAAG,YAAgC;EAAA,IAA/BC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EAEtD,QAAOA,MAAM,CAACC,IAAI;IACnB,KAAKV,qBAAqB,CAACC,GAAG;MAC1B,OAAM;QACF,GAAGO,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IAEL,KAAKX,qBAAqB,CAACE,QAAQ;MAC/B,OAAM;QACF,GAAGM,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IAEL,KAAKX,qBAAqB,CAACG,MAAM;MAC7B,OAAM;QACF,GAAGK,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IAEL,KAAKX,qBAAqB,CAACI,QAAQ;MAC/B,OAAM;QACF,GAAGI,KAAK;QACRF,MAAM,EAACE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MACjC,CAAC;IACD;MACI,OAAOH,KAAK;EAAC;AAIrB,CAAC;AAGD,OAAO,MAAMI,KAAK,GAAGb,WAAW,CAACQ,iBAAiB,CAAC;AAEnDK,KAAK,CAACC,SAAS,CAAC,MAAI,CAGpB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}